 <!-- Authors -->
                <IconTabFilter
                    text="Authors ({=${LibraryData>/author/$count} ? ${LibraryData>/author/$count} : 0})"
                    key="Author"
                    >
                    <Page>
                        <ScrollContainer
                            height="100%"
                            width="100%"
                            horizontal="false"
                            vertical="true"
                        >
                            <Table
                                id="authorTable"
                                inset="false"
                                showSeparators="Inner"
                                itemPress="onAuthListItemPress"
                                items="{
                                path: 'LibraryData>/author'
                                }"
                            >
                             
                                <columns>
                                    <Column width="12em">
                                        <Text text="ID" />
                                    </Column>
                                    <Column width="12em">
                                        <Text text="Name" />
                                    </Column>
                                </columns>
                                <items>
                                    <ColumnListItem type="Navigation">
                                        <cells>
                                            <ObjectIdentifier
                                                text="{LibraryData>AuthorID}"
                                            />
                                            <ObjectIdentifier
                                                text="{LibraryData>Name}"
                                            />
                                        </cells>
                                    </ColumnListItem>
                                </items>
                            </Table>
                        </ScrollContainer>
                    </Page>
                </IconTabFilter>










                 if (Array.isArray(books)) {
            return results = await Promise.all(
                books.map(async (book) => {
                    const sqlCommand = `SELECT AVG("RATING") as AverageRating FROM ${CUSTOMERREVIEWS} WHERE BookISBN = ?`;
                    const [result] = await cds.run(sqlCommand, [book.ISBN]);
                    // console.log(result)
                    book.AverageRating = result?.AVERAGERATING || null;
                    return book;
                }),
                
               
            )}



            
		// 	"footer": {
		// 	"paginator": {
		// 		"pageSize": 1
		// 	}
		// }